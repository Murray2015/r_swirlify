2+2
install.packages('ggplot2')
install.packages("tidyverse")
install.packages('data.table')
install.packages('shiny')
install.packages('swirl')
install.packages('lattice')
install.packages('lubridate')
install.packages('leaflet')
install.packages('car')
install.packages('caret')
install.packages('randomForest')
install.packages('sp')
install.packages('maptools')
install.packages('maps')
install.packages('ggmap')
install.packages('RColorBrewer')
install.packages('rpart')
install.packages('e1071')
library(ggplot2)
a = data.frame(x = seq(1,100), y=runif(100))
ggplot(a) + geom_blank()
ggplot(a) + geom_blank(aes(x=x,y=y))
a
ggplot(a) + geom_line(aes(x=x,y=y))
swirl()
swirl
library(swirl)
swirl()
exit()
q
info()
bye()
data = read.csv('sills.csv', na.strings=c("NA","NaN", " "))
library(tidyverse)
# Reassigne Fernandez's complex to irregular
data$shape[data$shape=='Complex'] = 'Irregular'
# Reassesment of the only fault block example shows it cuts the fault on one side, so is flat.
data$shape[data$shape=='Faultblock'] = 'Flat'
data[data$shape == "", 'shape'] = NA
library(plyr)
data$usingfaults = revalue(data$usingfaults, c("N"="Intruding sediment", "Y"="Intruding faults"))
data[data$usingfaults == "", 'usingfaults'] = NA
subset1 = subset(data, data$datasetme != 'Modelling' & data$datasetme != 'Norway' & data$datasetme != 'New Zealand')
ggplot(subset1,aes(x = datasetme, fill = shape)) +
geom_bar(position='fill') + xlab('Dataset name') + ylab('Proportion') + ggtitle('Sill shape data') + theme(axis.text.x = element_text(angle = 90, hjust = 1))  + scale_fill_brewer('Shape', palette="Set1")
# ggsave(filename="ch2_basin_shape.jpg", width=6, height=4, units='in', dpi=300)
subset2 = subset(data, data$datasetme != 'Modelling' & data$datasetme != 'Norway' & data$datasetme != 'New Zealand' & data$datasetme != 'Hatton' & data$datasetme != 'Karoo' & data$datasetme != 'Porcupine' & data$datasetme != 'SlyneErris' & data$datasetme != 'IrishRockall')
ggplot(subset2,aes(x = datasetme, fill = usingfaults)) +
geom_bar(position='fill') + xlab('Dataset name') + ylab('Proportion') + ggtitle('Fault intrusion') + theme(axis.text.x = element_text(angle = 90, hjust = 1))  + scale_fill_brewer('', palette="Set1")
# ggsave(filename="ch6_sills_faults.jpg", width=6, height=4, units='in', dpi=300)
names(data)
plot(log(data$thickness, base=10), log(data$longlengthfull, base=10))
plot(log(data$thickness, base=10), log(data$longlengthfull, base=10), xlim=c(0,5), ylim=c(0,5))
plot(log(data$thickness, base=10), log(data$longlengthfull, base=10), xlim=c(2,5), ylim=c(2,5))
# make plot of the number of sills with greater thickness than T
sill_lengths = data$longlengthfull
# Sort the data and make a dataframe
sill_l = data.frame(sort(sill_lengths))
# fill columns with the number of entries remaining (this is the same as counting the number of sills with a greater thickness than that value - this is exploiting that we have sorted the dataframe)
sill_l$number_greater = seq(nrow(sill_l)-1,0, -1)
# jpeg('ch2_sill_diameter_power.jpg',res=300, width=6, height=4, units='in')
plot(x=log(sill_l$sort.sill_lengths., base=10), y=log(sill_l$number_greater, base=10), xlab="Log sill diameter (m)", ylab="Log N > sill diameter", ylim=c(0,4), xlim=c(2,5))
# dev.off()
# Unsure if this looks power law or not?
tapply(data$longlengthfull, data$datasetme, mean, na.rm=T)
#tapply(data$longlengthfull, data$datasetme, median, na.rm=T)
tapply(data$longlengthfull, data$datasetme, sd, na.rm=T)
sort(tapply(data$longlengthfull, data$datasetme, IQR, na.rm=T))
sort(tapply(data$longlengthfull, data$datasetme, max, na.rm=T))
sort(tapply(data$longlengthfull, data$datasetme, min, na.rm=T))
## Make labels for number of observations
subset1$datasetme = factor(subset1$datasetme)
nlabels <- table(subset1$datasetme)
ns <- c(by(subset1$longlengthfull, subset1$datasetme, length))
# Plot
ggplot(subset1) + geom_boxplot(aes(x=datasetme, y=longlengthfull, fill=datasetme)) + theme(axis.text.x = element_text(angle = 90, hjust = 1))  + scale_fill_brewer(palette="Set1")+ guides(fill=FALSE) + xlab('Dataset name') + ylab('Sill diameter (m)') + geom_text(data = data.frame(), aes(x = names(ns) , y = max(subset1$longlengthfull, na.rm=T)*1.1, label = paste("n =", nlabels)))
# ggsave('ch2_basin_length.jpg', dpi=300, width=6.5, height=4, units='in')
sort(tapply(data$longlengthfull, data$shape, min, na.rm=T))
sort(tapply(data$longlengthfull, data$shape, median, na.rm=T))
sort(tapply(data$longlengthfull, data$shape, IQR, na.rm=T))
sort(tapply(data$longlengthfull, data$shape, max, na.rm=T))
## Make labels for number of observations
subset1$shape = factor(subset1$shape)
subset1.2 = subset(subset1, !is.na(subset1$shape))
nlabels <- table(subset1.2$shape)
ns <- c(by(subset1.2$longlengthfull, subset1.2$shape, length))
ggplot(subset1.2) + geom_boxplot(aes(x=shape, y=longlengthfull, fill=shape)) + theme(axis.text.x = element_text(angle = 90, hjust = 1))  + scale_fill_brewer(palette="Set1")+ guides(fill=FALSE) +ggtitle('Max sill diameter by shape') + xlab('Sill shape') + ylab('Sill diameter (m)') + geom_text(data = data.frame(), aes(x = names(ns) , y = max(subset1.2$longlengthfull, na.rm=T)*1.1, label = paste("n =", nlabels)))
# ggsave(file='ch2_shape_length.jpg', width=6, height=4, units='in', dpi=300)
#table(data$datasetme)
data$three_D_survey[data$datasetme =='Bight' | data$datasetme =='Hatton' | data$datasetme == 'New Zealand' |  data$datasetme == 'IrishRockall'] = as.character('2D')
data$three_D_survey[data$datasetme == 'Coverak' | data$datasetme =='FSB' | data$datasetme == 'Judd' | data$datasetme == 'SlyneErris' |data$datasetme=='Rockall'] = as.character('3D')
data$three_D_survey[data$datasetme == 'Karoo' ] = as.character('NA')
data$three_D_survey = factor(data$three_D_survey)
subset1 = subset(data, data$datasetme != 'Modelling' & data$datasetme != 'Norway' & data$datasetme != 'New Zealand')
subset1$datasetme = factor(subset1$datasetme)
# mean(data$longlengthfull[data$three_D_survey==0], na.rm=TRUE)
# mean(data$longlengthfull[data$three_D_survey==1], na.rm=TRUE)
ggplot(subset1) + geom_boxplot(aes(x=datasetme, y=longlengthfull, fill=three_D_survey)) + theme(axis.text.x = element_text(angle = 90, hjust = 1))  + scale_fill_brewer(palette="Set1") + xlab('Dataset name') + ylab('Sill diameter (m)') + scale_fill_discrete(name="Data type")
# ggsave('ch2_basin_length_2d3d.jpg',dpi=300, width=6, height=4, units='in')
data$transgreshight_time = data$timedeepest - data$timeshallowest
thickness_mod_no_intercept = lm(thickness ~ longlengthfull-1, data=data[data$longlengthfull < 30000,])
summary(thickness_mod_no_intercept)
ggplot(data[data$longlengthfull < 30000,], aes(x=longlengthfull, y=thickness)) + geom_point() + xlab('Sill diameter (m)') + ylab('Sill thickness (m)') + xlim(0,25000) + geom_smooth(method='lm',formula=y~x-1) + annotate('text', x=11000, y=600, label='Sill thickness = 0.024022 Sill diameter')
# ggsave('ch2_sill_diam_vs_thickness_no_intercept.jpg', dpi=300, width=5, height=3, units='in')
thickness_mod = lm(thickness ~ longlengthfull, data=data[data$longlengthfull < 30000,])
summary(thickness_mod)
ggplot(data[data$longlengthfull < 30000,], aes(x=longlengthfull, y=thickness)) + geom_point() + xlab('Sill diameter (m)') + ylab('Sill thickness (m)') + xlim(0,25000) + geom_smooth(method='lm',formula=y~x) + annotate('text', x=10000, y=600, label='Sill thickness = 120.2 + 0.01284 Sill diameter') + annotate('text', x=6000, y=550, label=paste("R^{2}==0.3123"), parse=T)
# ggsave('ch2_sill_diam_vs_thickness.jpg', dpi=300, width=5, height=3, units='in')
library(swirlify)
set_lesson()
swirlify::get_current_lesson()
getwd()
setwd("~/Documents/scratch/r_swirlify")
getwd()
new_lesson(course_name = "R_for_climate_scientists", lesson_name = "Working with NetCDF files")
swirlify()
